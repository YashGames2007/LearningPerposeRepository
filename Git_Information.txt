!!! *** Git Files Status LifeStyle *** !!!

+------------------------------------------------------------------------------------+
| +-----------+          +-------------+          +-----------+          +---------+ |
| | Untracked |          | Unmodified^ |          | Modified^ |          | Staged^ | |
| +-----+-----+          +------+------+          +-----+-----+          +----+----+ |
|       |                       |                       |                     |      |
|       |---------------------|\|                       |                     |      |
|       |     Add The File      X                       |                     |      |
|       |---------------------|/|                       |                     |      |
|       |                       |                       |                     |      |
|       |                       |---------------------|\|                     |      |
|       |                       |     Edit The File     X                     |      |
|       |                       |---------------------|/|                     |      |
|       |                       |                       |                     |      |
|       |/|---------------------|                       |-------------------|\|      |
|       X    Remove The File    |                       |    Stage The File   X      |
|       |\|---------------------|                       |-------------------|/|      |
|       |                       |                       |                     |      |
|       |                       |/|-------------------------------------------|      |
|       |                       |               Commit The File               |      |
|       |                       |\|-------------------------------------------|      |
|       |                       |                       |                     |      |
+-------+-----------------------+-----------------------+---------------------+------+


!!! *** Git Architecture *** !!!

+----------------------------------------------------------------------+---------------------------+
|                           LOCAL                                      |           REMOTE          |
+----------------------------------------------------------------------+---------------------------+
| +-----------+          +---------+          +------------------+     |     +-------------------+ |
| |  Working  |          | Staging |          |  Git Directory   |     |     | GitHub Directory  | |
| | Directory |          |  Area   |          | Local Repository |     |     | Remote Repository | |
| +-----+-----+          +----+----+          +--------+---------+     |     +---------+---------+ |
|       |                     |                        |               |               |           |
|       |-------------------|\|                        |               |               |           |
|       |  Stage The Files    X                        |               |               |           |
|       |-------------------|/|                        |               |               |           |
|       |                     |                        |               |               |           |
|       |/|--------------------------------------------|               |               |           |
|       X            Checkout The Files                |               |               |           |
|       |\|--------------------------------------------|               |               |           |
|       |                     |                        |               |               |           |
|       |                     |                        |/|-----------------------------|           |
|       |                     |                        X         Pull The Files        |           |
|       |                     |                        |\|-----------------------------|           |
|       |                     |                        |               |               |           |
|       |                     |----------------------|\|               |               |           |
|       |                     |   Commit The Files     X               |               |           |
|       |                     |----------------------|/|               |               |           |
|       |                     |                        |               |               |           |
|       |                     |                        |-----------------------------|\|           |
|       |                     |                        |         Push The Files        X           |
|       |                     |                        |-----------------------------|/|           |
|       |                     |                        |               |               |           |
|       |/|--------------------------------------------|               |               |           |
|       X              Merge The Files                 |               |               |           |
|       |\|--------------------------------------------|               |               |           |
|       |                     |                        |               |               |           |
+-------+---------------------+------------------------+---------------+---------------+-----------+


!!! *** Git Bash Commands ***!!!

Initializing / Logging Commands:

$ git init                              - Initialize New Local Git Repository.
$ git clone @remoteURL                  - Initialize a Copy of Desired Remote Repository With Using URL.
$ git config --global user.name "@name" - Stores Name of The User Which Can Be Given as @name.
$ git config --global user.email @email - Stores Email id of The User Which Can Be Given as @email.

Common Commands:

$ git status                            - Shows The Status of Working Tree. [local]
$ git log                               - Shows All Commit Massages and Thier Author's Name & Email With Date And Time Respectively.
$ git log -@n                           - Shows Last n commit Massages

Staging Commands:

$ git add @file                         - Adds The File to Stagging Area. 
$ git add --a                           - Adds All File to Stagging Area. 

Commiting Commands:

$ git commit @file                      - Commits The Staged Files. (Opens Editor To Get Commit Massage)
$ git commit -m "@massage"              - Commits The Staged Files. (Accept The Commit Massage Passed Through)
$ git commit -a                         - Commits All The Files. (Staged and Unstaged.)


Linux Commands:

$ ls                                    - Shows All Files In List Format. 
$ pwd                                   - Shows The Path of Present Working Directory.
$ cd                                    - Changes The Path Of Working Directory.
$ touch @file                           - Creating New File At Current Directory.
$ rm -rf .git                           - Removes/Deletes The .git Folder. (Disband The Git Local Repository)


!!! *** Git Help OutPut *** !!!

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects
